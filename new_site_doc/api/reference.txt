#### 參考文獻
1. [顯示文件](https://htmlpreview.github.io/?https://raw.githubusercontent.com/danielgtaylor/aglio/blob/master/examples/default.html#notes-note-list-get)
2. [對照寫法文件](https://raw.githubusercontent.com/danielgtaylor/aglio/master/example.apib)
https://github.com/twtrubiks/aglio_tutorial
https://dwatow.github.io/2017/11-14-api-blueprint-note/
https://github.com/danielgtaylor/aglio

https://laraveldaily.com/working-with-mysql-json-columns-in-laravel-custom-properties-example/
https://laravel.com/docs/8.x/migrations

https://www.footmark.info/linux/centos/php7-pdo-mssql-for-centos7/

https://packagist.org/packages/brokenice/laravel-mysql-partition
https://cola.workxplay.net/mysql-partitioning-for-performance-optimization/
https://iter01.com/508342.html

QRcode 產生器
https://www.superiorwebsys.com/blog/posts/66/QRCode.php
<img src="https://chart.apis.google.com/chart?chs=150x150&cht=qr&chld=L|0&chl=https://liuqcup.tdhome.tw/list?id=123456" alt="QR code" widhtHeight="150" widhtHeight="150" />
<?
$urlToEncode="http://superiorwebsys.com";
generateQRwithGoogle($urlToEncode);
function generateQRwithGoogle($url,$widthHeight ='150',$EC_level='L',$margin='0') {
    $url = urlencode($url);
    echo '<img src="http://chart.apis.google.com/chart?chs='.$widthHeight.
'x'.$widthHeight.'&cht=qr&chld='.$EC_level.'|'.$margin.
'&chl='.$url.'" alt="QR code" widthHeight="'.$widthHeight.
'" widthHeight="'.$widthHeight.'"/>';
}
?>
http://phpqrcode.sourceforge.net/
https://xyz.cinc.biz/2014/08/php-qr-code.html

https://getcomposer.org/download/

https://www.toptal.com/laravel/restful-laravel-api-tutorial


建立資料庫最初始資料
CREATE USER 'liuqcup'@'localhost' IDENTIFIED WITH mysql_native_password BY 'liuqCUP$2021$kh';
CREATE DATABASE liuqcup;
GRANT ALL PRIVILEGES ON liuqcup.* TO 'liuqcup'@'localhost';
FLUSH PRIVILEGES;

insert into accounts ( adminid,adminname,password,salt,token,level,phoneno,email ) values ( "admin","admin","ab123456","helloworld","ABC123",'0',"0987654321","test@hello.com" );
update  accounts set `lock` = 'N' where adminid = "admin";

select COLUMN_NAME, CONSTRAINT_NAME, REFERENCED_COLUMN_NAME, REFERENCED_TABLE_NAME from information_schema. KEY_COLUMN_USAGE where TABLE_NAME = 'storesfunctions';

alter table storesclass add constraint storesclass_classid_classes foreign key (classid) references classes(classid);
alter table storescups drop constraint storeid;

customers 資料表建立
CREATE TABLE customers (
    id INT NOT NULL AUTO_INCREMENT,
    cusid VARCHAR(20) NOT NULL UNIQUE,
    cusname VARCHAR(100) NULL,
    cusphone VARCHAR(150) NOT NULL,
    email VARCHAR(100) NULL,
    `lock` ENUM("Y", "N") NOT NULL Default("Y"),
    created_at timestamp NULL,
    updated_at timestamp NULL,
    PRIMARY KEY(id)
) ENGINE=innodb, CHARSET="utf8";

rentlogs 資料表建立
CREATE TABLE rentlogs (
    id INT NOT NULL AUTO_INCREMENT,
    cusid VARCHAR(20) NOT NULL,
    storeid CHAR(100) NOT NULL,
    rentid ENUM("R", "B") NOT NULL Default("R"),
    nums INT NOT NULL default(0),
    comments VARCHAR(255) NULL,
    eventtimes datetime NOT NULL DEFAULT current_timestamp(),
    checks ENUM("Y", "N") NOT NULL Default("N"),
    PRIMARY KEY(id,eventtimes)
) ENGINE=innodb, CHARSET="utf8";

ALTER TABLE rentlogs PARTITION BY RANGE(year(eventtimes))
SUBPARTITION BY HASH(month(eventtimes))
(PARTITION `year2019` VALUES LESS THAN (2020)
 (SUBPARTITION `dec2019` ENGINE = InnoDB,
  SUBPARTITION `jan2019` ENGINE = InnoDB,
  SUBPARTITION `feb2019` ENGINE = InnoDB,
  SUBPARTITION `mar2019` ENGINE = InnoDB,
  SUBPARTITION `apr2019` ENGINE = InnoDB,
  SUBPARTITION `may2019` ENGINE = InnoDB,
  SUBPARTITION `jun2019` ENGINE = InnoDB,
  SUBPARTITION `jul2019` ENGINE = InnoDB,
  SUBPARTITION `aug2019` ENGINE = InnoDB,
  SUBPARTITION `sep2019` ENGINE = InnoDB,
  SUBPARTITION `oct2019` ENGINE = InnoDB,
  SUBPARTITION `nov2019` ENGINE = InnoDB),
 PARTITION `year2020` VALUES LESS THAN (2021)
 (SUBPARTITION `dec2020` ENGINE = InnoDB,
  SUBPARTITION `jan2020` ENGINE = InnoDB,
  SUBPARTITION `feb2020` ENGINE = InnoDB,
  SUBPARTITION `mar2020` ENGINE = InnoDB,
  SUBPARTITION `apr2020` ENGINE = InnoDB,
  SUBPARTITION `may2020` ENGINE = InnoDB,
  SUBPARTITION `jun2020` ENGINE = InnoDB,
  SUBPARTITION `jul2020` ENGINE = InnoDB,
  SUBPARTITION `aug2020` ENGINE = InnoDB,
  SUBPARTITION `sep2020` ENGINE = InnoDB,
  SUBPARTITION `oct2020` ENGINE = InnoDB,
  SUBPARTITION `nov2020` ENGINE = InnoDB),
  PARTITION `year2021` VALUES LESS THAN (2022)
 (SUBPARTITION `dec2021` ENGINE = InnoDB,
  SUBPARTITION `jan2021` ENGINE = InnoDB,
  SUBPARTITION `feb2021` ENGINE = InnoDB,
  SUBPARTITION `mar2021` ENGINE = InnoDB,
  SUBPARTITION `apr2021` ENGINE = InnoDB,
  SUBPARTITION `may2021` ENGINE = InnoDB,
  SUBPARTITION `jun2021` ENGINE = InnoDB,
  SUBPARTITION `jul2021` ENGINE = InnoDB,
  SUBPARTITION `aug2021` ENGINE = InnoDB,
  SUBPARTITION `sep2021` ENGINE = InnoDB,
  SUBPARTITION `oct2021` ENGINE = InnoDB,
  SUBPARTITION `nov2021` ENGINE = InnoDB),
 PARTITION `year2022` VALUES LESS THAN (2023)
 (SUBPARTITION `dec2022` ENGINE = InnoDB,
  SUBPARTITION `jan2022` ENGINE = InnoDB,
  SUBPARTITION `feb2022` ENGINE = InnoDB,
  SUBPARTITION `mar2022` ENGINE = InnoDB,
  SUBPARTITION `apr2022` ENGINE = InnoDB,
  SUBPARTITION `may2022` ENGINE = InnoDB,
  SUBPARTITION `jun2022` ENGINE = InnoDB,
  SUBPARTITION `jul2022` ENGINE = InnoDB,
  SUBPARTITION `aug2022` ENGINE = InnoDB,
  SUBPARTITION `sep2022` ENGINE = InnoDB,
  SUBPARTITION `oct2022` ENGINE = InnoDB,
  SUBPARTITION `nov2022` ENGINE = InnoDB),
PARTITION `year2023` VALUES LESS THAN (2024)
 (SUBPARTITION `dec2023` ENGINE = InnoDB,
  SUBPARTITION `jan2023` ENGINE = InnoDB,
  SUBPARTITION `feb2023` ENGINE = InnoDB,
  SUBPARTITION `mar2023` ENGINE = InnoDB,
  SUBPARTITION `apr2023` ENGINE = InnoDB,
  SUBPARTITION `may2023` ENGINE = InnoDB,
  SUBPARTITION `jun2023` ENGINE = InnoDB,
  SUBPARTITION `jul2023` ENGINE = InnoDB,
  SUBPARTITION `aug2023` ENGINE = InnoDB,
  SUBPARTITION `sep2023` ENGINE = InnoDB,
  SUBPARTITION `oct2023` ENGINE = InnoDB,
  SUBPARTITION `nov2023` ENGINE = InnoDB),
 PARTITION `year2024` VALUES LESS THAN (2025)
 (SUBPARTITION `dec2024` ENGINE = InnoDB,
  SUBPARTITION `jan2024` ENGINE = InnoDB,
  SUBPARTITION `feb2024` ENGINE = InnoDB,
  SUBPARTITION `mar2024` ENGINE = InnoDB,
  SUBPARTITION `apr2024` ENGINE = InnoDB,
  SUBPARTITION `may2024` ENGINE = InnoDB,
  SUBPARTITION `jun2024` ENGINE = InnoDB,
  SUBPARTITION `jul2024` ENGINE = InnoDB,
  SUBPARTITION `aug2024` ENGINE = InnoDB,
  SUBPARTITION `sep2024` ENGINE = InnoDB,
  SUBPARTITION `oct2024` ENGINE = InnoDB,
  SUBPARTITION `nov2024` ENGINE = InnoDB),
PARTITION `year2025` VALUES LESS THAN (2026)
 (SUBPARTITION `dec2025` ENGINE = InnoDB,
  SUBPARTITION `jan2025` ENGINE = InnoDB,
  SUBPARTITION `feb2025` ENGINE = InnoDB,
  SUBPARTITION `mar2025` ENGINE = InnoDB,
  SUBPARTITION `apr2025` ENGINE = InnoDB,
  SUBPARTITION `may2025` ENGINE = InnoDB,
  SUBPARTITION `jun2025` ENGINE = InnoDB,
  SUBPARTITION `jul2025` ENGINE = InnoDB,
  SUBPARTITION `aug2025` ENGINE = InnoDB,
  SUBPARTITION `sep2025` ENGINE = InnoDB,
  SUBPARTITION `oct2025` ENGINE = InnoDB,
  SUBPARTITION `nov2025` ENGINE = InnoDB),
 PARTITION `year2026` VALUES LESS THAN (2027)
 (SUBPARTITION `dec2026` ENGINE = InnoDB,
  SUBPARTITION `jan2026` ENGINE = InnoDB,
  SUBPARTITION `feb2026` ENGINE = InnoDB,
  SUBPARTITION `mar2026` ENGINE = InnoDB,
  SUBPARTITION `apr2026` ENGINE = InnoDB,
  SUBPARTITION `may2026` ENGINE = InnoDB,
  SUBPARTITION `jun2026` ENGINE = InnoDB,
  SUBPARTITION `jul2026` ENGINE = InnoDB,
  SUBPARTITION `aug2026` ENGINE = InnoDB,
  SUBPARTITION `sep2026` ENGINE = InnoDB,
  SUBPARTITION `oct2026` ENGINE = InnoDB,
  SUBPARTITION `nov2026` ENGINE = InnoDB),
  PARTITION `year2027` VALUES LESS THAN (2028)
 (SUBPARTITION `dec2027` ENGINE = InnoDB,
  SUBPARTITION `jan2027` ENGINE = InnoDB,
  SUBPARTITION `feb2027` ENGINE = InnoDB,
  SUBPARTITION `mar2027` ENGINE = InnoDB,
  SUBPARTITION `apr2027` ENGINE = InnoDB,
  SUBPARTITION `may2027` ENGINE = InnoDB,
  SUBPARTITION `jun2027` ENGINE = InnoDB,
  SUBPARTITION `jul2027` ENGINE = InnoDB,
  SUBPARTITION `aug2027` ENGINE = InnoDB,
  SUBPARTITION `sep2027` ENGINE = InnoDB,
  SUBPARTITION `oct2027` ENGINE = InnoDB,
  SUBPARTITION `nov2027` ENGINE = InnoDB),
 PARTITION `year2028` VALUES LESS THAN (2029)
 (SUBPARTITION `dec2028` ENGINE = InnoDB,
  SUBPARTITION `jan2028` ENGINE = InnoDB,
  SUBPARTITION `feb2028` ENGINE = InnoDB,
  SUBPARTITION `mar2028` ENGINE = InnoDB,
  SUBPARTITION `apr2028` ENGINE = InnoDB,
  SUBPARTITION `may2028` ENGINE = InnoDB,
  SUBPARTITION `jun2028` ENGINE = InnoDB,
  SUBPARTITION `jul2028` ENGINE = InnoDB,
  SUBPARTITION `aug2028` ENGINE = InnoDB,
  SUBPARTITION `sep2028` ENGINE = InnoDB,
  SUBPARTITION `oct2028` ENGINE = InnoDB,
  SUBPARTITION `nov2028` ENGINE = InnoDB),
PARTITION `year2029` VALUES LESS THAN (2030)
 (SUBPARTITION `dec2029` ENGINE = InnoDB,
  SUBPARTITION `jan2029` ENGINE = InnoDB,
  SUBPARTITION `feb2029` ENGINE = InnoDB,
  SUBPARTITION `mar2029` ENGINE = InnoDB,
  SUBPARTITION `apr2029` ENGINE = InnoDB,
  SUBPARTITION `may2029` ENGINE = InnoDB,
  SUBPARTITION `jun2029` ENGINE = InnoDB,
  SUBPARTITION `jul2029` ENGINE = InnoDB,
  SUBPARTITION `aug2029` ENGINE = InnoDB,
  SUBPARTITION `sep2029` ENGINE = InnoDB,
  SUBPARTITION `oct2029` ENGINE = InnoDB,
  SUBPARTITION `nov2029` ENGINE = InnoDB),
 PARTITION `year2030` VALUES LESS THAN (2031)
 (SUBPARTITION `dec2030` ENGINE = InnoDB,
  SUBPARTITION `jan2030` ENGINE = InnoDB,
  SUBPARTITION `feb2030` ENGINE = InnoDB,
  SUBPARTITION `mar2030` ENGINE = InnoDB,
  SUBPARTITION `apr2030` ENGINE = InnoDB,
  SUBPARTITION `may2030` ENGINE = InnoDB,
  SUBPARTITION `jun2030` ENGINE = InnoDB,
  SUBPARTITION `jul2030` ENGINE = InnoDB,
  SUBPARTITION `aug2030` ENGINE = InnoDB,
  SUBPARTITION `sep2030` ENGINE = InnoDB,
  SUBPARTITION `oct2030` ENGINE = InnoDB,
  SUBPARTITION `nov2030` ENGINE = InnoDB),
 PARTITION `future` VALUES LESS THAN MAXVALUE
(SUBPARTITION `dec` ENGINE = InnoDB,
  SUBPARTITION `jan` ENGINE = InnoDB,
  SUBPARTITION `feb` ENGINE = InnoDB,
  SUBPARTITION `mar` ENGINE = InnoDB,
  SUBPARTITION `apr` ENGINE = InnoDB,
  SUBPARTITION `may` ENGINE = InnoDB,
  SUBPARTITION `jun` ENGINE = InnoDB,
  SUBPARTITION `jul` ENGINE = InnoDB,
  SUBPARTITION `aug` ENGINE = InnoDB,
  SUBPARTITION `sep` ENGINE = InnoDB,
  SUBPARTITION `oct` ENGINE = InnoDB,
  SUBPARTITION `nov` ENGINE = InnoDB));

show create table rentlogs;

統計資訊
select storeid, sum(nums) from rentlogs where rentid = "B" and eventtimes between '2021-06-01 00:00:00' and '2021-07-01 00:00:00' group by storeid;


網站設定
semanage fcontext -a -t httpd_sys_rw_content_t '/usr/share/nginx/html/liuqcup/storage(/.*)?'
semanage fcontext -a -t httpd_sys_rw_content_t '/usr/share/nginx/html/liuqcup/bootstrap/cache(/.*)?'
setsebool -P httpd_can_network_connect_db on
setsebool -P httpd_can_network_connect on

佈署流程
git clone https://github.com/antallen/liuqcup.git
composer install
cp .env.example .env
php artisan key:generate
vim .env


return response('OK', 200);


VUE 佈署方式
https://segmentfault.com/a/1190000038672615
https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/55227/#outline__4
https://zhuanlan.zhihu.com/p/337533899
https://matthiashoys.wordpress.com/2020/01/15/how-to-upgrade-node-js-from-v6-to-v12-on-centos-linux-7/


上傳檔案的方式
https://ithelp.ithome.com.tw/articles/10232804
